#!/bin/bash
set -o pipefail

cd ~/media/music
SELECTED="$(find ! \( -type f -name 'cover.*' \) ! -path '*/.*' -print0 | fzf --read0 --print0 --filter "$(sed 's/--[^ ]*//g;s/-\([^ ]*\)/!\1/g;s/  */ /g;s/^ //;s/ $//;' <<<"$*")" | cut -d '' -f1)"
if [[ -z "${SELECTED}" ]]; then
  echo "No music matches the query '$*'."
  exit 1
fi

if [[ "${SELECTED}" == '.' ]]; then
  SORT=shuf
else
  SORT=sort
fi

exec mpv --idle --loop-playlist $(grep -oz -- '--[^ ]*' <<<"$*" | tr '\0' ' ') --input-file=<(
    find -L "${SELECTED}" -type f ! -path '*/.*' -print0 | ${SORT} -z | (
        # the first few files should be added to the playlist ASAP, only then should we increase niceness
        head -zn8 | xargs -0r file -00Li
        # TODO: theoretically stdout could be garbled due to unchecked xargs parallelism
        nice xargs -0rn32 -P$(nproc) file -00Li
    ) | \
    while IFS= read -rd '' FPATH && IFS= read -rd '' FTYPE; do
        FTYPE="${FTYPE:0:6}"
        if [[ "${FTYPE}" == "audio/" ]] || [[ "${FTYPE}" == "video/" ]]; then
            # TODO: jq needs a null-delimited lines option, for now we are using normal newlines
            printf "%s\n" "${FPATH}"
        fi
    done | \
    jq -cR '{ "command": ["loadfile", ., "append-play"] }'
)
