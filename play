#!/bin/bash
set -o pipefail

cd ~/media/music

fzf_find() {
    find . ! \( -type f -name 'cover.*' \) ! -path '*/.*' -print0
}

if [[ "$1" == "--interactive" ]]; then
    FZF_FILTER_OPT="--query"
    shift
else
    FZF_FILTER_OPT="--filter"
fi

FZF_FILTER="$(sed 's/--[^ ]*//g;s/-\([^ ]*\)/!\1/g;s/  */ /g;s/^ //;s/ $//;' <<<"$*")"
SELECTED="$(fzf_find | fzf --read0 --print0 ${FZF_FILTER_OPT} "${FZF_FILTER}" | cut -d '' -f1)"

if [[ -z "${SELECTED}" ]]; then
    echo "No music matches the query '$*'."
    exit 1
fi

if [[ "${SELECTED}" == '.' ]]; then
    SORT=shuf
else
    SORT=sort
fi

exec mpv --idle --loop-playlist $(grep -oz -- '--[^ ]*' <<<"$*" | tr '\0' ' ') --input-file=<(
    find -L "${SELECTED}" -type f ! -path '*/.*' -print0 | ${SORT} -z | (
        # the first few files should be added to the playlist ASAP, only then should we increase niceness
        IFS= read -rd '' f1
        IFS= read -rd '' f2
        IFS= read -rd '' f3
        file -00Li "${f1}" "${f2}" "${f3}"

        # TODO: theoretically stdout could be garbled due to unchecked xargs parallelism
        nice xargs -0rn32 -P"$(nproc)" file -00Li
    ) | while IFS= read -rd '' FPATH && IFS= read -rd '' FTYPE; do
        FTYPE="${FTYPE:0:6}"
        if [[ "${FTYPE}" == "audio/" ]] || [[ "${FTYPE}" == "video/" ]]; then
            # TODO: jq needs a null-delimited lines option, for now we are using normal newlines
            printf "%s\n" "${FPATH}"
        fi
    done | jq -cR '{ "command": ["loadfile", ., "append-play"] }'
)
